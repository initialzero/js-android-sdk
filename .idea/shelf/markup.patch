Index: core/src/main/java/com/jaspersoft/android/sdk/service/report/ReportExportOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/jaspersoft/android/sdk/service/report/ReportExportOptions.java	(date 1457622286000)
+++ core/src/main/java/com/jaspersoft/android/sdk/service/report/ReportExportOptions.java	(revision )
@@ -35,6 +35,7 @@
  * @since 2.0
  */
 public final class ReportExportOptions {
+    private final ReportMarkup mMarkup;
     private final ReportFormat mFormat;
 
     private final PageRange mPageRange;
@@ -45,12 +46,14 @@
     private final Boolean mAllowInlineScripts;
 
     @TestOnly
-    ReportExportOptions(ReportFormat format,
+    ReportExportOptions(ReportMarkup markup,
+                        ReportFormat format,
-                                PageRange pageRange,
-                                String attachmentPrefix,
-                                String anchor,
-                                Boolean ignorePagination,
-                                Boolean allowInlineScripts) {
+                        PageRange pageRange,
+                        String attachmentPrefix,
+                        String anchor,
+                        Boolean ignorePagination,
+                        Boolean allowInlineScripts) {
+        mMarkup = markup;
         mFormat = format;
         mPageRange = pageRange;
         mAttachmentPrefix = attachmentPrefix;
@@ -94,6 +97,11 @@
         return mAllowInlineScripts;
     }
 
+    @Nullable
+    public ReportMarkup getMarkup() {
+        return mMarkup;
+    }
+
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
@@ -109,6 +117,7 @@
         if (mFormat != that.mFormat) return false;
         if (mIgnorePagination != null ? !mIgnorePagination.equals(that.mIgnorePagination) : that.mIgnorePagination != null)
             return false;
+        if (mMarkup != that.mMarkup) return false;
         if (mPageRange != null ? !mPageRange.equals(that.mPageRange) : that.mPageRange != null) return false;
 
         return true;
@@ -116,7 +125,8 @@
 
     @Override
     public int hashCode() {
-        int result = mFormat != null ? mFormat.hashCode() : 0;
+        int result = mMarkup != null ? mMarkup.hashCode() : 0;
+        result = 31 * result + (mFormat != null ? mFormat.hashCode() : 0);
         result = 31 * result + (mPageRange != null ? mPageRange.hashCode() : 0);
         result = 31 * result + (mAttachmentPrefix != null ? mAttachmentPrefix.hashCode() : 0);
         result = 31 * result + (mAnchor != null ? mAnchor.hashCode() : 0);
@@ -146,6 +156,7 @@
 
         private Boolean mIgnorePagination;
         private Boolean mAllowInlineScripts;
+        private ReportMarkup mMarkup;
 
         private Builder() {
         }
@@ -160,6 +171,11 @@
             return this;
         }
 
+        public Builder withMarkup(@Nullable ReportMarkup markup) {
+            mMarkup = markup;
+            return this;
+        }
+
         public Builder withAttachmentPrefix(@Nullable String prefix) {
             mAttachmentPrefix = prefix;
             return this;
@@ -185,6 +201,7 @@
                 throw new IllegalStateException("Format should be supplied");
             }
             return new ReportExportOptions(
+                    mMarkup,
                     mFormat,
                     mPageRange,
                     mAttachmentPrefix,
Index: core/src/main/java/com/jaspersoft/android/sdk/service/report/ExportOptionsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/jaspersoft/android/sdk/service/report/ExportOptionsMapper.java	(date 1457622286000)
+++ core/src/main/java/com/jaspersoft/android/sdk/service/report/ExportOptionsMapper.java	(revision )
@@ -68,6 +68,11 @@
             resultOptions.withAttachmentsPrefix(escapeAttachmentPrefix(prefix));
         }
 
+        ReportMarkup markup = options.getMarkup();
+        if (markup != null) {
+            resultOptions.withMarkupType(markup.toString());
+        }
+
         resultOptions.withIgnorePagination(options.getIgnorePagination());
         resultOptions.withAnchor(options.getAnchor());
         resultOptions.withAllowInlineScripts(options.getAllowInlineScripts());
